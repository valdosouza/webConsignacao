// Mocks generated by Mockito 5.0.10 from annotations
// in appweb/test/app/modules/home/domain/usescases/get_financial_closed_usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as i4;

import 'package:appweb/app/core/error/failures.dart' as i5;
import 'package:appweb/app/modules/home/data/model/home_sales_payment_type_model.dart'
    as i6;
import 'package:appweb/app/modules/home/domain/repositories/home_repository.dart'
    as i3;
import 'package:dartz/dartz.dart' as i2;
import 'package:mockito/mockito.dart' as i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends i1.Fake implements i2.Either<L, R> {}

/// A class which mocks [HomeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRepository extends i1.Mock implements i3.HomeRepository {
  MockHomeRepository() {
    i1.throwOnMissingStub(this);
  }

  @override
  i4.Future<i2.Either<i5.Failure, List<i6.HomeSalesPaymentTypeModel>>>
      getFinancialClosed({
    String? initialDate,
    String? finalDate,
    String? terminal,
  }) =>
          (super.noSuchMethod(
              Invocation.method(#getFinancialClosed, [],
                  {#initialDate: initialDate, #finalDate: finalDate}),
              returnValue: Future<
                      i2.Either<i5.Failure,
                          List<i6.HomeSalesPaymentTypeModel>>>.value(
                  _FakeEither<i5.Failure, List<i6.HomeSalesPaymentTypeModel>>())) as i4
              .Future<i2.Either<i5.Failure, List<i6.HomeSalesPaymentTypeModel>>>);
}

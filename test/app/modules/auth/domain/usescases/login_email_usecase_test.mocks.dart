// Mocks generated by Mockito 5.0.10 from annotations
// in appweb/test/app/modules/auth/domain/usescases/login_email_usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as i4;

import 'package:appweb/app/core/error/failures.dart' as i5;
import 'package:appweb/app/modules/auth/data/model/auth_model.dart' as i6;
import 'package:appweb/app/modules/auth/domain/repositories/auth_repository.dart'
    as i3;
import 'package:dartz/dartz.dart' as i2;
import 'package:mockito/mockito.dart' as i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends i1.Fake implements i2.Either<L, R> {}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends i1.Mock implements i3.AuthRepository {
  MockAuthRepository() {
    i1.throwOnMissingStub(this);
  }

  @override
  i4.Future<i2.Either<i5.Failure, i6.AuthModel>> loginEmail(
          {String? username, String? password}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #loginEmail, [], {#username: username, #password: password}),
              returnValue: Future<i2.Either<i5.Failure, i6.AuthModel>>.value(
                  _FakeEither<i5.Failure, i6.AuthModel>()))
          as i4.Future<i2.Either<i5.Failure, i6.AuthModel>>);
}

// Mocks generated by Mockito 5.3.2 from annotations
// in appweb/test/app/modules/stock_list_register/domain/usescases/stock_list_getlist_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:appweb/app/core/error/failures.dart' as _i5;
import 'package:appweb/app/modules/stock_list_register/data/model/stock_list_model.dart'
    as _i6;
import 'package:appweb/app/modules/stock_list_register/domain/repository/stock_list_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [StockListRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockStockListRepository extends _i1.Mock
    implements _i3.StockListRepository {
  MockStockListRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.StockListModel>>> getList(
          {required int? institutionId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getList,
          [],
          {#institutionId: institutionId},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.StockListModel>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.StockListModel>>(
          this,
          Invocation.method(
            #getList,
            [],
            {#institutionId: institutionId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.StockListModel>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.StockListModel>> post(
          {required _i6.StockListModel? model}) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [],
          {#model: model},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.StockListModel>>.value(
                _FakeEither_0<_i5.Failure, _i6.StockListModel>(
          this,
          Invocation.method(
            #post,
            [],
            {#model: model},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.StockListModel>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> put(
          {required _i6.StockListModel? model}) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [],
          {#model: model},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, String>>.value(
            _FakeEither_0<_i5.Failure, String>(
          this,
          Invocation.method(
            #put,
            [],
            {#model: model},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, String>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> delete({required int? stockId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {#stockId: stockId},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, String>>.value(
            _FakeEither_0<_i5.Failure, String>(
          this,
          Invocation.method(
            #delete,
            [],
            {#stockId: stockId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, String>>);
}
